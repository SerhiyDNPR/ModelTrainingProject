import json
import tkinter as tk
from tkinter import filedialog
from pathlib import Path
from tqdm import tqdm

def verify_unity_perception_data(source_dir: Path):
    """
    –ê–Ω–∞–ª—ñ–∑—É—î –¥–∞–Ω—ñ Unity Perception –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–∞–¥—Ä—ñ–≤ –±–µ–∑ –∞–Ω–æ—Ç–∞—Ü—ñ–π,
    –≤–∏–≤–æ–¥—è—á–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∫–æ–∂–Ω–æ—ó –∑–Ω–∞–π–¥–µ–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó 'solo*' –æ–∫—Ä–µ–º–æ.

    Args:
        source_dir (Path): –®–ª—è—Ö –¥–æ –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑ –¥–∞–Ω–∏–º–∏.
    """
    print(f"\nüîç –†–æ–∑–ø–æ—á–∞—Ç–æ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö —É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {source_dir.resolve()}")

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó 'solo*' –¥–ª—è –æ–∫—Ä–µ–º–æ—ó –æ–±—Ä–æ–±–∫–∏
    solo_dirs = sorted([p for p in source_dir.glob("solo*") if p.is_dir()])

    if not solo_dirs:
        print(f"\n‚ùå –ü–û–ú–ò–õ–ö–ê: –£ –≤–∫–∞–∑–∞–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫ 'solo*'.")
        print("–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏ –æ–±—Ä–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É –ø–∞–ø–∫—É.")
        return

    # –ó–∞–≥–∞–ª—å–Ω—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –¥–ª—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–≤—ñ—Ç—É
    grand_total_frames = 0
    grand_total_annotated = 0
    grand_total_unannotated = 0

    # –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é 'solo' –æ–∫—Ä–µ–º–æ
    for solo_dir in solo_dirs:
        print("\n" + "="*50)
        print(f"üìÅ –ê–Ω–∞–ª—ñ–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {solo_dir.name}")
        print("="*50)

        json_files = sorted(list(solo_dir.glob("sequence.*/step0.frame_data.json")))

        if not json_files:
            print("   -> –í —Ü—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–∞–¥—Ä—ñ–≤ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.")
            continue

        # –õ–æ–∫–∞–ª—å–Ω—ñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
        total_frames = 0
        annotated_frames = 0
        unannotated_frames = 0
        unannotated_files_list = []

        for frame_json_path in tqdm(json_files, desc=f"–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ {solo_dir.name}", unit="–∫–∞–¥—Ä"):
            total_frames += 1
            has_bbox_annotation = False

            try:
                with open(frame_json_path, 'r', encoding='utf-8') as f:
                    frame_data = json.load(f)

                capture = frame_data.get("capture") or frame_data.get("captures", [{}])[0]
                annotations_list = frame_data.get("annotations", capture.get("annotations", []))

                for annotation in annotations_list:
                    if "BoundingBox2DAnnotation" in annotation.get("@type", "") and annotation.get("values"):
                        has_bbox_annotation = True
                        break
                
                if has_bbox_annotation:
                    annotated_frames += 1
                else:
                    unannotated_frames += 1
                    unannotated_files_list.append(frame_json_path)

            except Exception as e:
                print(f"\n‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ñ–∞–π–ª—É {frame_json_path}: {e}")
                unannotated_frames += 1
                unannotated_files_list.append(frame_json_path)

        # --- –í–∏–≤–µ–¥–µ–Ω–Ω—è –∑–≤—ñ—Ç—É –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó ---
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è '{solo_dir.name}':")
        print(f"   üñºÔ∏è  –í—Å—å–æ–≥–æ –∫–∞–¥—Ä—ñ–≤: {total_frames}")
        print(f"   ‚úÖ –ó —Ä–æ–∑–º—ñ—Ç–∫–æ—é:      {annotated_frames}")
        print(f"   ‚ùóÔ∏è –ë–ï–ó —Ä–æ–∑–º—ñ—Ç–∫–∏:     {unannotated_frames}")

        if unannotated_files_list:
            print("\n   üìã –°–ø–∏—Å–æ–∫ –∫–∞–¥—Ä—ñ–≤ –±–µ–∑ —Ä–æ–∑–º—ñ—Ç–∫–∏:")
            for file_path in unannotated_files_list:
                # –í–∏–≤–æ–¥–∏–º–æ —à–ª—è—Ö –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ—Ç–æ—á–Ω–æ—ó 'solo' –ø–∞–ø–∫–∏
                relative_path = file_path.relative_to(solo_dir)
                print(f"     - {relative_path}")
        
        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö –ª—ñ—á–∏–ª—å–Ω–∏–∫—ñ–≤
        grand_total_frames += total_frames
        grand_total_annotated += annotated_frames
        grand_total_unannotated += unannotated_frames

    # --- –í–∏–≤–µ–¥–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –∑–≤—ñ—Ç—É ---
    print("\n" + "#"*50)
    print("üèÜ –ó–ê–ì–ê–õ–¨–ù–ò–ô –ü–Ü–î–°–£–ú–û–ö –ü–û –í–°–Ü–• –î–ò–†–ï–ö–¢–û–†–Ü–Ø–•")
    print("#"*50)
    print(f"üìÅ –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π:   {len(solo_dirs)}")
    print(f"üñºÔ∏è  –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞–¥—Ä—ñ–≤: {grand_total_frames}")
    print(f"‚úÖ –í—Å—å–æ–≥–æ –∑ —Ä–æ–∑–º—ñ—Ç–∫–æ—é:      {grand_total_annotated}")
    print(f"‚ùóÔ∏è –í—Å—å–æ–≥–æ –ë–ï–ó —Ä–æ–∑–º—ñ—Ç–∫–∏:     {grand_total_unannotated}")
    print("#"*50)


if __name__ == '__main__':
    root = tk.Tk()
    root.withdraw()

    print("–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∫–æ—Ä–µ–Ω–µ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –∑ –¥–∞–Ω–∏–º–∏ Unity Perception –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó...")
    source_directory = filedialog.askdirectory(
        title="–û–±–µ—Ä—ñ—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –∑ –¥–∞–Ω–∏–º–∏ Unity Perception"
    )

    if not source_directory:
        print("\n–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –Ω–µ –æ–±—Ä–∞–Ω–æ. –†–æ–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
    else:
        source_path = Path(source_directory)
        verify_unity_perception_data(source_path)